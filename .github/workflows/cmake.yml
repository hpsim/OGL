name: CMake

on: [pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        OF: [{repo: "https://github.com/OpenFOAM/OpenFOAM-9.git",
              path: "OpenFOAM-9",
              version: "9"},
             {repo: "https://develop.openfoam.com/Development/openfoam.git",
              path: "openfoam",
              version: "v2106"}]
    
    env:
      Ginkgo_DIR: /home/runner/OpenFOAM/${{ github.actor }}-${{ matrix.OF.version }}/platforms/linux64DPInt32Opt/lib/cmake/Ginkgo
      FOAM_SRC: /home/runner/OpenFOAM/${{ matrix.OF.path }}/src
      FOAM_LIBBIN: /home/runner/OpenFOAM/${{ matrix.OF.path }}/platforms/linux64DPInt32Opt/lib
      FOAM_APPBIN: /home/runner/OpenFOAM/${{ matrix.OF.path }}/platforms/linux64DPInt32Opt/lib
      FOAM_USER_LIBBIN: /home/runner/OpenFOAM/${{ github.actor }}-${{ matrix.OF.version }}/platforms/linux64DPInt32Opt/lib
      FOAM_USER_APPBIN: /home/runner/OpenFOAM/${{ github.actor }}-${{ matrix.OF.version }}/platforms/linux64DPInt32Opt/lib
 
    
    steps:
    - name: Cache OpenFOAM
      uses: actions/cache@v2
      with:
        key: ${{ matrix.OF.path }}
        path: |
          $HOME/OpenFOAM
          
    - name: Install build depencies  
      # Clone OpenFOAM
      run: |
        sudo apt update
        sudo apt install \
          git \
          build-essential \
          flex bison cmake zlib1g-dev \
          libopenmpi-dev openmpi-bin gnuplot libreadline-dev libncurses-dev libxt-dev \
          libscotch-dev libcgal-dev python python-dev

    - name: Clone OpenFOAM 
      # Clone OpenFOAM
      run: git clone  --depth 1 ${{ matrix.OF.repo }}  /home/runner/OpenFOAM/${{ matrix.OF.path }}
      
    - name: Build OpenFOAM 
      # Clone OpenFOAM
      run: cd /home/runner/OpenFOAM/${{ matrix.OF.path }}
           ./Allwmake
      
    - name: Show OpenFOAM folder
      # Clone OpenFOAM
      run: ls /home/runner/OpenFOAM/${{ matrix.OF.path }}
      
    - uses: actions/checkout@v2
    - name: Install ninja-build tool
      # You may pin to the exact commit or the version.
      # uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
      uses: seanmiddleditch/gha-setup-ninja@v3
      with:
        # Version of ninja-build to install
        version: 1.10.0 # default is 1.10.0
    
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        mkdir build 
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
