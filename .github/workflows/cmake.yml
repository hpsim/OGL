name: CMake

on: [pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        OF: [{repo: "https://github.com/OpenFOAM/OpenFOAM-9.git",
              path: "OpenFOAM-9",
              version: "9"},
             {repo: "https://develop.openfoam.com/Development/openfoam.git",
              path: "openfoam",
              version: "v2106"}]
    
    env:
      FOAM_INST_DIR: /home/runner/OpenFOAM/
  
    steps:
    - name: Setting up OF enviroment
      run: |
        echo "FOAM_INST_DIR=/home/runner/OpenFOAM" >> $GITHUB_ENV
        echo "WM_PROJECT=OpenFOAM" >> $GITHUB_ENV
        echo "WM_DIR=${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/wmake" >> $GITHUB_ENV
        echo "FOAM_LIBBIN=${{ env.FOAM_INST_DIR }}/${{ matrix.OF.path }}/platforms/linux64DPInt32Opt/lib
        env
        # echo "Ginkgo_DIR=/home/runner/OpenFOAM/${{ github.actor }}-${{ matrix.OF.version }}/platforms/linux64DPInt32Opt/lib/cmake/Ginkgo" >> $GITHUB_ENV
        #echo "FOAM_LIBBIN=${{ env.FOAM_INST_DIR }}/${{ matrix.OF.path }}/platforms/linux64DPInt32Opt/lib
        #echo "FOAM_APPBIN=${{ env.FOAM_INST_DIR }}/${{ matrix.OF.path }}/platforms/linux64DPInt32Opt/lib
        #echo "FOAM_USER_LIBBIN=${{env.FOAM_INST_DIR}}/${{ github.actor }}-${{ matrix.OF.version }}/platforms/linux64DPInt32Opt/lib
        #echo "FOAM_USER_APPBIN=${{env.FOAM_INST_DIR}}/${{ github.actor }}-${{ matrix.OF.version }}/platforms/linux64DPInt32Opt/lib
        #echo "WM_PROJECT_VERSION=${{ matrix.OF.version }}" >> $GITHUB_ENV
        #echo "WM_COMPILER_TYPE=system" >> $GITHUB_ENV
        #echo "WM_COMPILER=gcc" >> $GITHUB_ENV
        #echo "WM_PRECISION_OPTION=DP" >> $GITHUB_ENV
        #echo "WM_LABEL_SIZE=32" >> $GITHUB_ENV
        #echo "WM_COMPILE_OPTION=Opt" >> $GITHUB_ENV
        #echo "WM_MPLIB=SYSTEMOPENMPI" >> $GITHUB_ENV
        #echo "WM_OSTYPE=POSIX" >> $GITHUB_ENV
        #WM_PROJECT_INST_DIR: ${{env.FOAM_INST_DIR}}
        #WM_PROJECT_DIR: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}
        #WM_THIRD_PARTY_DIR: ${{env.FOAM_INST_DIR}}/openfoam/ThirdParty
        #WM_PROJECT_USER_DIR: ${{env.FOAM_INST_DIR}}/${{ github.actor }}-${{ matrix.OF.version }}
        #WM_ARCH: linux64
        #WM_LINK_LANGUAGE: c++
        #WM_LABEL_OPTION: Int32
        #WM_OPTIONS: linux64gccDPInt32Opt
        #FOAM_SITE_APPBIN: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/site/2106/platforms/darwin64ClangDPInt32Opt/bin
        #FOAM_SITE_LIBBIN: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/site/2106/platforms/darwin64ClangDPInt32Opt/lib
        #FOAM_ETC: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/etc
        #FOAM_APP: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/applications
        #FOAM_TUTORIALS: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/tutorials
        #FOAM_UTILITIES: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/utilities
        #FOAM_SOLVERS: ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/solvers
        #FOAM_RUN: ${{env.FOAM_INST_DIR}}/go-v2106/run
        #FOAM_API: 2106

    
    - name: Cache OpenFOAM
      uses: actions/cache@v2
      with:
        key: ${{ matrix.OF.path }}
        path: |
          $HOME/OpenFOAM
          
    - name: Install build depencies  
      # Clone OpenFOAM
      run: |
        sudo apt update
        sudo apt install \
          git \
          build-essential \
          flex bison cmake zlib1g-dev \
          libopenmpi-dev openmpi-bin gnuplot libreadline-dev libncurses-dev libxt-dev \
          libscotch-dev libcgal-dev python python-dev

    - name: Clone OpenFOAM 
      # Clone OpenFOAM
      run: git clone  --depth 1 ${{ matrix.OF.repo }}  /home/runner/OpenFOAM/${{ matrix.OF.path }}
      
    - name: Build OpenFOAM 
      # Clone OpenFOAM
      run: |
        cd ${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}
        ls
        env
        ./Allwmake
      
    - name: Show OpenFOAM folder
      # Clone OpenFOAM
      run: ls /home/runner/OpenFOAM/${{ matrix.OF.path }}
      
    - uses: actions/checkout@v2
    - name: Install ninja-build tool
      # You may pin to the exact commit or the version.
      # uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
      uses: seanmiddleditch/gha-setup-ninja@v3
      with:
        # Version of ninja-build to install
        version: 1.10.0 # default is 1.10.0
    
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        mkdir build 
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
