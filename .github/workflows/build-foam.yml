name: Build OpenFOAM (ESI|FOUNDATION)
on:
  pull_request:
    types: synchronize
  schedule:
    - cron: "* * * * 0"
env:
  BUILD_TYPE: Release
  FOAM_INST_DIR: /home/runner/OpenFOAM
  WM_PROJECT: OpenFOAM
  WM_OPTIONS: linux64GccDPInt32Opt
  WM_COMPILER_TYPE: system
  WM_COMPILER: Gcc
  WM_PRECISION_OPTION: DP
  WM_LABEL_SIZE: 32
  WM_COMPILE_OPTION: Opt
  WM_OSTYPE: POSIX
  WM_ARCH: linux64
  WM_ARCH_OPTION: 64
  WM_LINK_LANGUAGE: c++
  WM_LABEL_OPTION:  Int32

jobs:
  build-foam:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        OF: [
          {
            version: "v2212",
            fork: "ESI",
            path: "openfoam",
            repo: "https://develop.openfoam.com/Development/openfoam.git",
            },
          {
            version: "10",
            fork: "Foundation",
            path: "OpenFOAM-10",
            repo: "https://github.com/OpenFOAM/OpenFOAM-10.git",
            }]

    steps:
    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ matrix.OF.path }}${{ matrix.OF.version }}
        path: /home/runner/OpenFOAM/

    - name: Set basice OF enviroment
      run: |
        mkdir -p $HOME/OpenFOAM
        touch $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        rm -f $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        touch $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{matrix.OF.path}}" >> $GITHUB_ENV
        echo "PLATFORM=$FOAM_INST_DIR/${{matrix.OF.path}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=$FOAM_INST_DIR/${{github.actor}}-${{matrix.OF.version}}"     >> $GITHUB_ENV
        echo "UPLATFORM=$FOAM_INST_DIR/${{github.actor}}-${{matrix.OF.version}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV

    - name: Writing an OF enviroment file
      run: |
        echo "$WM_PROJECT_DIR/wmake"                                 >> $GITHUB_PATH
        echo "FOAM_ETC=${WM_PROJECT_DIR}/etc"                        >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_SRC=$WM_PROJECT_DIR/src"                          >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "WM_DIR=$WM_PROJECT_DIR/wmake"                          >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "WM_MPLIB=SYSTEMOPENMPI"                                >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_LIBBIN=$PLATFORM/lib"                             >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_SITE_LIBBIN=$PLATFORM/lib"                        >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_APPBIN=$PLATFORM/bin"                             >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_USER_LIBBIN=$UPLATFORM/lib"                       >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_USER_APPBIN=$UPLATFORM/bin"                       >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_APP=$WM_PROJECT_DIR/applications"                 >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_TUTORIALS=$WM_PROJECT_DIR/tutorials"              >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "WM_PROJECT_VERSION=${{matrix.OF.version}}"             >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "WM_PROJECT_INST_DIR=$FOAM_INST_DIR"                    >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_SOLVERS=$WM_PROJECT_DIR/applications/solvers"     >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_UTILITIES=$WM_PROJECT_DIR/applications/utilities" >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "WM_THIRD_PARTY_DIR=${{env.FOAM_INST_DIR}}/ThirdParty-${{matrix.OF.version}}"  >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "FOAM_EXT_LIBBIN=$FOAM_INST_DIR/ThirdParty/platforms/linux64GccDPInt32Opt/lib" >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        # echo "Ginkgo_DIR=$FOAM_USER_LIBBIN/cmake/Ginkgo"                     >> $HOME/OpenFOAM/.${{ matrix.OF.path }}_env
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PLATFORM/lib"  >> $GITHUB_ENV
        echo "CPATH=$CPATH:$PLATFORM/lib"                      >> $GITHUB_ENV
        cat $HOME/OpenFOAM/.${{ matrix.OF.path}}_env           >> $GITHUB_ENV

    - name: Install build depencies
      # Clone OpenFOAM
      run: |
        sudo apt update
        sudo apt install \
          git \
          build-essential \
          autoconf \
          autotools-dev \
          flex bison cmake zlib1g-dev \
          libfl-dev \
          mpi-default-bin \
          mpi-default-dev \
          libopenmpi-dev \
          openmpi-bin \
          gnuplot \
          libreadline-dev \
          libncurses-dev \
          libxt-dev \
          libscotch-dev \
          libptscotch-dev \
          libcgal-dev

    - name: Clone OpenFOAM
      run: |
        if [ ! -d /home/runner/OpenFOAM/${{matrix.OF.path}} ]; then
          git clone  --depth 1 ${{ matrix.OF.repo }} \
            /home/runner/OpenFOAM/${{ matrix.OF.path }}
        else
          echo "Skipping clone"
        fi

    - name: Build OpenFOAM (ESI)
      if: ${{ matrix.OF.fork == 'ESI' }}
      # Clone OpenFOAM
      working-directory: /home/runner/OpenFOAM/${{ matrix.OF.path }}
      run: |
        chmod +x /home/runner/OpenFOAM/openfoam/etc/openfoam
        /home/runner/OpenFOAM/${{ matrix.OF.path }}/etc/openfoam ./Allwmake -j

    - name: Build OpenFOAM (Foundation)
      if: ${{ matrix.OF.fork == 'Foundation' }}
      # Clone OpenFOAM
      working-directory: /home/runner/OpenFOAM/${{ matrix.OF.path }}
      run: |
        mkdir -p  $FOAM_LIBBIN
        mkdir -p  $FOAM_APPBIN
        ./Allwmake -j

  build-ogl:
    needs: build-foam
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        OF: [
          {
            version: "v2212",
            fork: "ESI",
            path: "openfoam",
            repo: "https://develop.openfoam.com/Development/openfoam.git",
            },
          {
            version: "10",
            fork: "Foundation",
            path: "OpenFOAM-10",
            repo: "https://github.com/OpenFOAM/OpenFOAM-10.git",
            }]

    steps:
    - uses: actions/checkout@v2
    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ matrix.OF.path }}
        path: /home/runner/OpenFOAM/

    - name: Source OF enviroment
      run: |
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{matrix.OF.path}}" >> $GITHUB_ENV
        echo "PLATFORM=$FOAM_INST_DIR/${{matrix.OF.path}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=$FOAM_INST_DIR/${{github.actor}}-${{matrix.OF.version}}"     >> $GITHUB_ENV
        echo "UPLATFORM=$FOAM_INST_DIR/${{github.actor}}-${{matrix.OF.version}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "$WM_PROJECT_DIR/wmake"                                 >> $GITHUB_PATH
        cat $HOME/OpenFOAM/.${{ matrix.OF.path}}_env           >> $GITHUB_ENV

    - name: Test OF enviroment
      run: foamInstallationTest

    - name: Install ninja-build tool
      # You may pin to the exact commit or the version.
      # uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
      uses: seanmiddleditch/gha-setup-ninja@v3
      with:
        # Version of ninja-build to install
        version: 1.10.0 # default is 1.10.0

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      working-directory: ${{github.workspace}}
      run: |
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

    - name: Build OGL
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config $BUILD_TYPE

    - name: Test OGL
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

    - name: Install OGL
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --install ./build

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ogl_build_${{ matrix.OF.path }}
        path: ${{github.workspace}}/build

  run-integration-tests:
    needs: [build-foam, build-ogl]
    runs-on: ubuntu-latest
    steps:
    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ matrix.OF.path }}
        path: /home/runner/OpenFOAM/

    - name: Source OF enviroment
      run: |
        ls /home/runner/OpenFOAM
        echo "$HOME/.esi_env=$FOAM_INST_DIR/env_file"            >> $GITHUB_ENV
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{matrix.OF.path}}" >> $GITHUB_ENV
        echo "PLATFORM=$FOAM_INST_DIR/${{matrix.OF.path}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=${{env.FOAM_INST_DIR}}/${{github.actor}}-${{matrix.OF.version}}" >> $GITHUB_ENV
        cat $HOME/.esi_env >> $GITHUB_ENV

    - name: Install OBR
      run: |
          git clone  github.com/hpsim/OBR.git
          cd OBR
          pip install .

